{
  extends: [
    "config:base",
  ],
  includeForks: true,
  renovateFork: true,
  automerge: false,
  platformAutomerge: false,
  labels: ["dependencies"],
  postUpdateOptions: ["gomodTidy", "yarnDedupeHighest"],
  prHourlyLimit: 0,
  prConcurrentLimit: 0,
  packageRules: [
    // e2e test depends on testing/Dockefile testing-image which has conftest specific version.
    // to upgrade conftest versions, we need following PRs.
    // 1. update testing/Dockerfile conftest version
    // 2. update testing-image tag
    // 3. update e2e conftest version
    // this settings allow to create only testing/Dockefile contest version update PR which uses branch prefix.
    {
      matchPaths: ["testing/**"],
      matchPackagePatterns: ["conftest"],
      additionalBranchPrefix: "{{baseDir}}-",
      groupName: "conftest-testing",
      commitMessageSuffix: "testing",
      prBodyNotes: [
        ":warning: You need to upgrade testing-image conftest firstly, then upgrade other conftest versions for e2e :warning:",
      ],
    },
    {
      ignorePaths: ["testing/**"],
      matchPackagePatterns: ["conftest"],
      groupName: "conftest-upgrade",
      commitMessageSuffix: "upgrade",
      prBodyNotes: [
        ":warning: You need to upgrade testing-image conftest firstly, then upgrade other conftest versions for e2e :warning:",
      ],
    },
  ],
  // https://docs.renovatebot.com/modules/manager/regex/
  regexManagers: [
    {
      fileMatch: ["(^|/)Dockerfile$", "(^|/)Dockerfile\\.[^/]*$"],
      matchStrings: [
        // example:
        // renovate: datasource=github-releases depName=hashicorp/terraform versioning=hashicorp
        // ENV DEFAULT_TERRAFORM_VERSION=x.x.x
        "renovate: datasource=(?<datasource>.*?) depName=(?<depName>.*?)( versioning=(?<versioning>.*?))?\\sENV .*?_VERSION=(?<currentValue>.*)\\s",
      ],
      versioningTemplate: "{{#if versioning}}{{{versioning}}}{{else}}semver{{/if}}",
      extractVersionTemplate: '^v(?<version>\\d+\\.\\d+\\.\\d+)',
    },
    {
      fileMatch: [".*go$"],
      matchStrings: [
        // example:
        // const ConftestVersion = "x.x.x" // renovate: datasource=github-releases depName=open-policy-agent/conftest
        "\\sconst .*Version = \"(?<currentValue>.*)\"\\s// renovate: datasource=(?<datasource>.*?) depName=(?<depName>.*?)( versioning=(?<versioning>.*?))?\\s",
      ],
      versioningTemplate: "{{#if versioning}}{{{versioning}}}{{else}}semver{{/if}}",
      extractVersionTemplate: '^v(?<version>\\d+\\.\\d+\\.\\d+)',
    },
    {
      fileMatch: [".circleci/config.yml$"],
      matchStrings: [
        // example:
        // # renovate: datasource=github-releases depName=hashicorp/terraform versioning=hashicorp
        // TRRAFORM_VERSION: x.x.x
        "renovate: datasource=(?<datasource>.*?) depName=(?<depName>.*?)( versioning=(?<versioning>.*?))?\\s.*?_VERSION: (?<currentValue>.*)\\s",
      ],
      versioningTemplate: "{{#if versioning}}{{{versioning}}}{{else}}semver{{/if}}",
      extractVersionTemplate: '^v(?<version>\\d+\\.\\d+\\.\\d+)',
    },
  ]
}
